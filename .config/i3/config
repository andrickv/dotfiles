# vim: filetype=i3
# This config file will use environmental variables such as $BROWSER and $TERMINAL.
# You can set these variables in ~/.profile or ~/.bash_profile if you have it as below:
#

set $mod Mod4
set $term --no-startup-id $TERMINAL
set $stoprec --no-startup-id dmenurecord kill
set $shutdown sudo -A shutdown -h now
set $reboot sudo -A reboot
set $netrefresh --no-startup-id sudo -A systemctl restart NetworkManager
set $hibernate sudo -A systemctl suspend

# #---Basic Definitions---# #
for_window [class="^.*"] border pixel 2
for_window [class="Google-chrome"] border pixel 0 gaps outer current set 0  gaps inner current set 0
for_window [class="Code"] border pixel 0 gaps outer current set 0  gaps inner current set 0
# Hide borders
hide_edge_borders none

gaps inner 15
gaps outer -2

floating_modifier $mod

# change borders
bindsym $mod+u border none
bindsym $mod+Ctrl+u border pixel 2
bindsym $mod+n border normal

# STARTUP APPS
# exec xrandr --output HDMI1 --right-of DP1 --output DP1 --right-of eDP1
exec google-chrome-stable
# exec skypeforlinux
# exec viber
# exec slack
# mpd startup
# exec --no-startup-id mpd
# Setting the background:
# exec --no-startup-id setbg
# Composite manager:
# exec --no-startup-id xcompmgr
# Runs the key remapping scripts
# exec --no-startup-id remaps
# Unclutter makes the mouse invisible after a brief period
# exec --no-startup-id unclutter
# Run the script to update the mpd i3block on change.
# exec_always --no-startup-id mpdupdate
# Volume icon
# exec_always --no-startup-id mpdupdate
#notification sistem
# exec --no-startup-id dunst


# hide/unhide i3status bar
bindsym $mod+b bar mode toggle

bar {
	font pango:mono 10
	status_command i3blocks
	position top
	mode dock
	modifier None
}

set $ws1 1:üí¨
set $ws2 2:üåê
set $ws3 3:‚ö°
set $ws4 4:üî®
set $ws5 5:VM
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1		workspace $ws1
bindsym $mod+2		workspace $ws2
bindsym $mod+3		workspace $ws3
bindsym $mod+4		workspace $ws4
bindsym $mod+5		workspace $ws5
bindsym $mod+6		workspace $ws6
bindsym $mod+7		workspace $ws7
bindsym $mod+8		workspace $ws8
bindsym $mod+9		workspace $ws9
bindsym $mod+0		workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1	move container to workspace $ws1
bindsym $mod+Shift+2	move container to workspace $ws2
bindsym $mod+Shift+3	move container to workspace $ws3
bindsym $mod+Shift+4	move container to workspace $ws4
bindsym $mod+Shift+5	move container to workspace $ws5
bindsym $mod+Shift+6	move container to workspace $ws6
bindsym $mod+Shift+7	move container to workspace $ws7
bindsym $mod+Shift+8	move container to workspace $ws8
bindsym $mod+Shift+9	move container to workspace $ws9
bindsym $mod+Shift+0	move container to workspace $ws10

bindsym $mod+Ctrl+Left move workspace to output left
bindsym $mod+Ctrl+Right move workspace to output right

# #---Arrow Keys---# #
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

bindsym $mod+Left		focus left
bindsym $mod+Down		focus down
bindsym $mod+Up			focus up
bindsym $mod+Right 		focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

bindsym $mod+Shift+Left		move left
bindsym $mod+Shift+Down		move down
bindsym $mod+Shift+Up		move up
bindsym $mod+Shift+Right 	move right

# Open applications on specific workspaces
assign [class="Google-chrome"] $ws2
assign [class="Firefox"] $ws2
assign [class="Viber"] $ws1
assign [class="Skype"] $ws1
assign [class="Slack"] $ws1
assign [class="Code"] $ws4
for_window [title="GIMP Startup"] move workspace $ws6
for_window [class="Gimp"] move workspace $ws6

for_window [title="alsamixer"] floating enable border pixel 1

for_window [window_role="GtkFileChooserDialog"] resize set 800 600
for_window [window_role="GtkFileChooserDialog"] move position center
for_window [title="Default - Wine desktop"] floating enable

# Bindings to make the webcam float and stick.
for_window [title="mpvfloat"] floating enable
for_window [title="mpvfloat"] sticky enable
for_window [title="mpvfloat"] border pixel 0
no_focus [title="mpvfloat"]

# switch to workspace with urgent window automatically
for_window [urgent=latest] focus

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+Shift+Escape 	exec --no-startup-id prompt "Exit i3?" "i3-msg exit"

# #---Basic Bindings---# #
bindsym $mod+Return 		exec $term
bindsym $mod+Shift+Return	exec --no-startup-id samedir
bindsym $mod+period		split horizontal;; exec $term
bindsym $mod+slash 		split vertical ;; exec $term

bindsym $mod+Shift+space 	floating toggle
bindsym $mod+space		focus mode_toggle

bindsym $mod+Escape		workspace prev

# Show selection:
bindsym $mod+Insert		exec --no-startup-id showclip

bindsym $mod+q			[con_id="__focused__" instance="^(?!dropdown_).*$"] kill
bindsym $mod+Shift+q		[con_id="__focused__" instance="^(?!dropdown_).*$"] exec --no-startup-id kill -9 `xdotool getwindowfocus getwindowpid`

bindsym $mod+Ctrl+r		exec --no-startup-id winresize
bindsym $mod+i 			exec $term -e htop
bindsym $mod+o			sticky toggle

bindsym $mod+d			exec --no-startup-id dmenu_run

set $freeze Distraction-free mode (super+shift+f to reactivate bindings)
mode "$freeze" { bindsym $mod+Shift+f mode "default"
}

bindsym $mod+f			fullscreen toggle
bindsym $mod+Shift+f		mode "$freeze" ;; exec --no-startup-id notify-send "Distraction-free mode activated." "Press Super+Shift+f to return."

bindsym $mod+a focus parent

# CAM AND KEYS
bindsym $mod+Ctrl+c		exec --no-startup-id camtoggle
bindsym $mod+Ctrl+k	exec --no-startup-id "killall screenkey || screenkey"

# TO CORNER
bindsym $mod+Shift+b		floating toggle; sticky toggle; exec --no-startup-id hover left
bindsym $mod+Shift+n		floating toggle; sticky toggle; exec --no-startup-id hover right

# NEWS TODO
#bindsym $mod+n			exec $term -e newsboat && pkill -RTMIN+6 i3blocks

# MUSIC AND MUTE
bindsym $mod+m 			exec --no-startup-id $term -e ncmpcpp
bindsym $mod+Shift+m		exec --no-startup-id lmc mute

# EMOJI
bindsym $mod+grave		exec --no-startup-id dmenuunicode


bindsym $mod+F1		exec --no-startup-id groff -mom ~/.local/share/larbs/readme.mom -Tpdf | zathura -
bindsym $mod+F2		exec --no-startup-id $BROWSER
bindsym $mod+F3 	exec nautilus
bindsym $mod+F4		exec $term -e $FILE
bindsym $mod+F5		exec $term -e nmtui
bindsym $mod+F6		exec --no-startup-id displayselect
bindsym $mod+F7		exec --no-startup-id $netrefresh
bindsym $mod+F9		exec --no-startup-id dmenumount
bindsym $mod+F10	exec --no-startup-id dmenuumount
bindsym $mod+F11	exec --no-startup-id ducksearch

# PRINTSCREEN AND RECORDING
bindsym Print    	    exec --no-startup-id maim -i $(xdotool getactivewindow) pic-full-"$(date '+%y%m%d-%H%M-%S').png"
bindsym Ctrl+Print		exec --no-startup-id maim pic-full-"$(date '+%y%m%d-%H%M-%S').png"
bindsym Shift+Print		exec --no-startup-id maimpick
bindsym $mod+Print		exec --no-startup-id dmenurecord
bindsym $mod+Shift+Print	exec $stoprec

# GAPS
bindsym $mod+Shift+t		gaps inner current set 15; gaps outer current set -2
bindsym $mod+Shift+d		gaps inner current set 0; gaps outer current set 0

# GAPS TODO (make same logic as resize)
bindsym $mod+x			gaps inner current plus 5
bindsym $mod+Shift+x	gaps inner current minus 5
bindsym $mod+z			gaps outer current plus 5
bindsym $mod+Shift+z	gaps outer current minus 5
# TODO GAPS
#bindsym $mod+Shift+z	gaps outer all minus 5

# Resize i3 - TODO (merge)
bindsym $mod+Shift+y		exec --no-startup-id i3resize left
bindsym $mod+Shift+u		exec --no-startup-id i3resize down
bindsym $mod+Shift+i		exec --no-startup-id i3resize up
bindsym $mod+Shift+o		exec --no-startup-id i3resize right

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window‚Äôs width.
        # Pressing right will grow the window‚Äôs width.
        # Pressing up will shrink the window‚Äôs height.
        # Pressing down will grow the window‚Äôs height.
        bindsym j resize shrink width 5 px or 5 ppt
        bindsym k resize grow height 5 px or 5 ppt
        bindsym l resize shrink height 5 px or 5 ppt
        bindsym semicolon resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 8 px or 8 ppt
        bindsym Down resize grow height 8 px or 8 ppt
        bindsym Up resize shrink height 8 px or 8 ppt
        bindsym Right resize grow width 8 px or 8 ppt

        # exit resize mode: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# split orientation
bindsym $mod+h split h;exec notify-send 'tile horizontally'
bindsym $mod+v split v;exec notify-send 'tile vertically'
bindsym $mod+t split toggle

bindsym $mod+Shift+Home mode "$keyboard_layout"
set $keyboard_layout (1)us, (2)rs, (3)rs latin
mode "$keyboard_layout" {
    bindsym 1 exec setxkbmap us, mode "default"
    bindsym 2 exec setxkbmap rs, mode "default"
    bindsym 3 exec setxkbmap rs latin, mode "default"


    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Set shut down, restart and locking features
bindsym $mod+Ctrl+0 mode "$mode_system"
set $mode_system (l)ock, (e)xit, switch_(u)ser, (s)uspend, (h)ibernate, (r)eboot, (Shift+s)hutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3exit lock, mode "default"
    bindsym s exec --no-startup-id i3exit suspend, mode "default"
    bindsym u exec --no-startup-id i3exit switch_user, mode "default"
    bindsym e exec --no-startup-id i3exit logout, mode "default"
    bindsym h exec --no-startup-id i3exit hibernate, mode "default"
    bindsym r exec --no-startup-id i3exit reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3exit shutdown, mode "default"

    # exit system mode: "Enter" or "Escape"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

# Lock screen
bindsym $mod+p exec --no-startup-id "blurlock && sleep 1 && xset dpms force off"

#TODO
# launch categorized menu

#bindsym $mod+z exec --no-startup-id morc_menu
#bindsym $mod+Ctrl+b exec terminal -e 'bmenu'

#STOP/HIDE EVERYTHING:
bindsym $mod+Shift+Delete	exec --no-startup-id lmc truemute ; exec --no-startup-id lmc pause ; exec --no-startup-id pauseallmpv; workspace 0; exec $term -e htop ; exec $term -e $FILE

#bindsym $mod+y			exec $term -e calcurse -D ~/.config/calcurse
#bindsym $mod+Shift+a		exec $term -e pulsemixer
#bindsym $mod+Shift+g		exec --no-startup-id gimp; workspace $ws5

#bindsym $mod+Shift+h		move left 30
#bindsym $mod+Shift+j		move down 30
#bindsym $mod+Shift+k		move up 30
#bindsym $mod+Shift+l		move right 30

#bindsym XF86MonBrightnessDown	exec --no-startup-id xbacklight -dec 15
#bindsym XF86MonBrightnessUp	exec --no-startup-id xbacklight -inc 15exec_always --no-startup-id notify-send -i ~/.scripts/pix/larbs.png '<b>Welcome to LARBS:</b> Press Super+F1 for the manual.' -t 10000
# exec_always --no-startup-id notify-send -i ~/.scripts/pix/larbs.png '<b>Welcome to LARBS:</b> Press Super+F1 for the manual.' -t 10000